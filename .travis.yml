language: node_js

services:
  - docker

node_js:
  - '12'

env:
  - CONTAINER="emscripten/emsdk:2.0.4"

jobs:
  include:
    - stage: 'Update Version'
      script:
        - cp -r ci-scripts ci-scripts-temp
        - cd ci-scripts-temp
        - node --version
        - npm install
        - chmod +x AutoUpdate.sh
        - chmod +x FetchDxLibVersion.js
        - chmod +x FetchLatestTag.js
        - ./AutoUpdate.sh

    - stage: 'Build'
      install:
        - docker pull ${CONTAINER}
      script:
        - docker run --name dxlib --volume ${TRAVIS_BUILD_DIR}:/src ${CONTAINER} bash Build.sh
        - mkdir dest
        - mkdir dest/lib
        - cp build/libDxLib.a dest/lib/
        - cp build/libDxUseCLib.a dest/lib/
        - cp build/libDxDrawFunc.a dest/lib/
        - mkdir dest/include
        - cp DxCompileConfig.h dest/include/
        - cp DxDataType.h dest/include/
        - cp DxDataTypeHTML5.h dest/include/
        - cp DxFunctionWin.h dest/include/
        - cp DxLib.h dest/include/
        - zip -r DxLibForHTML5.zip dest
        - tar -cvzf DxLibForHTML5.tgz dest/*
      deploy:
        provider: releases
        token: $GITHUB_TOKEN
        file:
          - DxLibForHTML5.zip
          - DxLibForHTML5.tgz
        skip_cleanup: true
        on:
          tags: true
      after_deploy:
        - curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/nokotan/OpenSiv3DForWeb-VSCode/actions/workflows/update.yml/dispatches" -d '{ "ref": "master", "inputs": { "name": "Update ${{ github.ref }}", "url": "${{ needs.pre-deploy.outputs.upload_url }}" } }'

stages:
  - name: 'Update Version'
    if: type = cron
  - name: 'Build'
